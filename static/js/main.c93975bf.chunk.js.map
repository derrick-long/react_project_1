{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c93975bf.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n        return {\n            ...state,\n            contacts: state.contacts.filter(contact => \n                contact.id !== action.payload)\n        };\n        case 'ADD_CONTACT':\n        return {\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n        };\n        case 'UPDATE_CONTACT':\n        return {\n            ...state,\n            contacts: state.contacts.map(contact => contact.id === action.payload.id\n                ? (contact = action.payload) : contact)\n        };\n        default: \n        return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n    contacts: [\n    ],\n    dispatch: action => this.setState(state => reducer(state,action))\n\n};\n\nasync componentDidMount(){\n    const res = await axios\n    .get('https://jsonplaceholder.typicode.com/users');\n    \n    this.setState({contacts: res.data});\n}\n\n\nrender() {\n    return(\n        <Context.Provider value={this.state}>\n            {this.props.children}\n        </Context.Provider>\n        )       \n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n class Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        try{\n            await axios.delete\n            (`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({ type: 'DELETE_CONTACT', payload: id});\n        } catch(e){\n            dispatch({ type: 'DELETE_CONTACT', payload: id});\n        }\n    }\n\n  render() {\n      const { id, name, email, phone} = \n      this.props.contact;\n      const { showContactInfo } = this.state;\n    \n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return(\n                    <div className=\"card card-body mb-3\">\n                    <h4>{name} <i onClick={() => \n                    this.setState({showContactInfo: !this.state.showContactInfo})\n                    }\n                    className=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}> </i>\n                    <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right',\n                    color: 'red'}}\n                    onClick={this.onDeleteClick.bind(this,id,dispatch)}>\n                    </i>\n                    \n                    <Link to={`contact/edit/${id}`}>\n                        <i \n                        className=\"fas fa-pencil-alt\"\n                        style={{\n                            cursor: 'pointer',\n                            float: 'right',\n                            color: 'black',\n                            marginRight: '1rem'\n                        }}>\n                        </i>\n                    </Link>\n\n                    </h4 >\n                    \n                    {showContactInfo ? ( \n                    <ul className = \"list-group\">\n                        <li className = \"list-group-item\" > Email: {email} </li> \n                        <li className = \"list-group-item\" > Phone: {phone} </li> \n                    </ul>\n                    ) : null}\n                  </div>\n                )\n            }}\n        </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n    \n\n  render() {\n\n    return (\n        <Consumer>\n            {value => {\n                const { contacts } = value;\n                return (\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                        <span className=\"text-danger\">Contact</span> List\n                        </h1>\n                        {contacts.map(contact=>(\n                            <Contact  key={contact.id}\n                            contact={contact}\n                            />\n                        ))}\n                  </React.Fragment>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const {branding} = props;\n  return (\n    <nav className= \"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n        {branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i>Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div> \n    </nav>\n  )\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"> About Contact Manager</h1>\n      <p className=\"lead\"> A simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0 </p>\n    </div>\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n \n\n\nconst TextInputGroup = ({\n    label, \n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg',{\n                'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n        />\n        {error && <div\n        className=\"invalid-feedback\"> {error}</div>}\n    </div> \n\n  )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n class AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit  = async (dispatch,e) => {\n       e.preventDefault();\n\n       const { name, email, phone }= this.state;\n\n       //check for errors \n\n       if(name ===''){\n           this.setState({errors: { name: 'Name is required'}});\n           return;\n       }\n       \n\n       if(email ===''){\n        this.setState({errors: { email: 'Email is required'}});\n        return;\n        }\n\n\n       if(phone ===''){\n        this.setState({errors: { phone: 'Phone is required'}});\n        return;\n        }\n\n\n       const newContact = {\n           name,\n           email, \n           phone\n       };\n\n       const res =  await axios\n        .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n    \n\n\n       //clear state\n\n       this.setState({\n           name: '',\n           email: '',\n           phone: '',\n           errors: {}\n       });\n\n       this.props.history.push('/');\n    }\n  \n    render() {\n      const { name, email, phone, errors } = this.state\n      \n      return (\n         <Consumer>\n             {value => {\n                 const { dispatch } = value;\n                 return(\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\"> Add Contact</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(\n                            this, dispatch)}>\n                            <TextInputGroup \n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                            />\n\n                            <TextInputGroup \n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Enter E-mail\"\n                            value={email}\n                            type=\"email\"\n                            onChange={this.onChange}\n                            error={errors.email}\n                            />\n\n                            <TextInputGroup \n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}\n                            />\n            \n                      \n                            \n                            <input type=\"submit\" value=\"Add Contact\"\n                            className=\"btn btn-light  btn-block\"/>\n            \n                        </form>\n                    </div>\n                  </div>\n\n                 )\n             }}\n         </Consumer>\n      )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n class EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit  = async (dispatch,e) => {\n       e.preventDefault();\n\n       const { name, email, phone }= this.state;\n\n       //check for errors \n\n       if(name ===''){\n           this.setState({errors: { name: 'Name is required'}});\n           return;\n       }\n       \n\n       if(email ===''){\n        this.setState({errors: { email: 'Email is required'}});\n        return;\n        }\n\n\n       if(phone ===''){\n        this.setState({errors: { phone: 'Phone is required'}});\n        return;\n        }\n\n        const updContact = {\n            name, \n            email,\n            phone\n        }\n        \n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`\n        , updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n     \n\n       this.setState({\n           name: '',\n           email: '',\n           phone: '',\n           errors: {}\n       });\n\n       this.props.history.push('/');\n    }\n  \n    render() {\n      const { name, email, phone, errors } = this.state\n      \n      return (\n         <Consumer>\n             {value => {\n                 const { dispatch } = value;\n                 return(\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\"> Edit Contact</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(\n                            this, dispatch)}>\n                            <TextInputGroup \n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                            />\n\n                            <TextInputGroup \n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Enter E-mail\"\n                            value={email}\n                            type=\"email\"\n                            onChange={this.onChange}\n                            error={errors.email}\n                            />\n\n                            <TextInputGroup \n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}\n                            />\n            \n                      \n                            \n                            <input type=\"submit\" value=\"Update Contact\"\n                            className=\"btn btn-light  btn-block\"/>\n            \n                        </form>\n                    </div>\n                  </div>\n\n                 )\n             }}\n         </Consumer>\n      )\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Not Found</h1>\n      <p className=\"lead\">Sorry, that page\n      does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    }\n    componentDidMount(){\n        fetch\n        ('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data=> this.setState({\n                title: data.title,\n                body: data.body\n            })\n            );\n    }\n\n    // componentWillMount(){\n    //     console.log(\"it will work!\");\n    // }\n\n    // componentDidUpdate(){\n    //     console.log(\"will work if it updated!\");\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState){\n    //     console.log('will recieve new properties!');\n    // }\n    \n    // static getDerivedStateFromProps(nextProps, prevState){\n    //     return {\n    //         test: 'something'\n    //     };\n    // }\n\n  render() {\n      const { title, body } = this.state;\n    return (\n      <div>\n        <h1> {title} </h1>\n        <p> {body} </p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport './App.css';\n// execute jsx before the return \n\nclass App extends Component {\n  render() {\n    return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        \n        <Header branding= \"Contact Manager\" />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route component={NotFound}/> \n          </Switch>\n        </div>\n\n      </div>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}